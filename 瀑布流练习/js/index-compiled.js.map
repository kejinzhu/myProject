{"version":3,"sources":["index.js"],"names":[],"mappings":"AAAA;AACA,IAAI,MAAM,SAAS,cAAT,CAAwB,KAAxB,CAAV;AACA,IAAI,MAAM,SAAS,oBAAT,CAA8B,IAA9B,CAAV;AACA,IAAI,OAAO,SAAS,oBAAT,CAA8B,KAA9B,CAAX;AACA,IAAI,QAAQ,IAAZ,C,CAAiB;AACjB,MAAM,CAAC,GAAG,GAAJ,CAAN,C,CAAe;AACf;AACA,SAAS,IAAT,CAAc,CAAd,EAAgB;AACZ,SAAI,IAAI,IAAI,CAAZ,EAAc,IAAE,CAAhB,EAAkB,GAAlB,EAAsB;AAClB;AACA;AACA,YAAI,CAAJ,EAAO,SAAP,IAAqB;4BACD,MAAM,SAAN,CAAgB,GAAhB,EAAqB,GAArB,CAA0B;yDACG,MAAM,SAAN,CAAgB,CAAhB,EAAmB,EAAnB,CAAuB;;;SAFxE;AAMA,YAAI,IAAJ,CAAS,CAAC,CAAD,EAAG,CAAH,KAAO;AACZ,mBAAO,MAAM,GAAN,CAAU,CAAV,EAAY,QAAZ,IAAsB,MAAM,GAAN,CAAU,CAAV,EAAY,QAAZ,CAA7B;AACH,SAFD,EATkB,CAWf;AACN;AACD,YAAQ,IAAI,CAAJ,EAAO,YAAf,CAdY,CAcgB;AAC/B;AACD;AACA;AACA,OAAO,QAAP,GAAkB,EAAlB;AACA,SAAS,EAAT,GAAa;AACT;AACA;AACA,QAAI,OAAO,MAAM,GAAN,CAAU,WAAV,CAAX;AACA;AACA,QAAI,OAAO,MAAM,GAAN,CAAU,cAAV,CAAX;AACA;AACA,QAAG,OAAK,IAAL,GAAU,KAAb,EAAmB;AACf,aAAK,EAAL;AACH;AACD;AACA,SAAI,IAAI,IAAI,CAAZ,EAAc,IAAE,KAAK,MAArB,EAA4B,GAA5B,EAAgC;AAC5B,gBAAQ,KAAK,CAAL,CAAR;AACH;AACJ;AACD;AACA,SAAS,OAAT,CAAiB,GAAjB,EAAqB;AACjB;AACA,QAAI,OAAO,MAAM,GAAN,CAAU,WAAV,CAAX;AACA;AACA,QAAI,OAAO,MAAM,GAAN,CAAU,cAAV,CAAX;AACA;AACA,QAAI,OAAO,MAAM,MAAN,CAAa,GAAb,EAAkB,GAA7B;AACA;AACA,QAAI,OAAO,IAAI,YAAf;AACA;AACA,QAAG,OAAK,IAAL,GAAU,IAAb,EAAkB;AACd,YAAG,IAAI,GAAP,EAAW;AACP;AACH;AACD,YAAI,SAAS,IAAI,KAAJ,EAAb;AACA,YAAI,QAAQ,IAAI,YAAJ,CAAiB,OAAjB,CAAZ;AACA,eAAO,GAAP,GAAa,KAAb;AACA,eAAO,MAAP,GAAgB,YAAY;AACxB,gBAAI,GAAJ,GAAU,KAAK,GAAf;AACA,gBAAI,GAAJ,GAAU,IAAV,CAFwB,CAET;AACf,qBAAS,IAAT;AACA,mBAAO,GAAP;AACH,SALD;AAOH;AACJ;AACD;AACA,SAAS,MAAT,CAAgB,GAAhB,EAAoB;AAChB;AACA,UAAM,GAAN,CAAU,GAAV,EAAc,SAAd,EAAwB,CAAxB;AACA;AACA,QAAI,OAAO,IAAI,YAAf;AACA;AACA,QAAI,OAAO,MAAM,GAAN,CAAU,WAAV,CAAX;AACA;AACA,QAAI,OAAO,MAAM,GAAN,CAAU,cAAV,CAAX;AACA;AACA,QAAI,OAAO,MAAM,MAAN,CAAa,GAAb,EAAkB,GAA7B;AACA;AACA,QAAI,KAAJ,GAAY,YAAY,YAAY;AAChC;AACA,YAAI,QAAQ,MAAM,GAAN,CAAU,GAAV,EAAc,SAAd,CAAZ;AACA,gBAAM,WAAW,KAAX,IAAkB,GAAxB;AACA,YAAG,OAAK,IAAL,GAAU,OAAK,IAAlB,EAAuB;AACnB;AACA,0BAAc,IAAI,KAAlB;AACA,kBAAM,GAAN,CAAU,GAAV,EAAc,SAAd,EAAwB,CAAxB;AACA;AACH;AACD,cAAM,GAAN,CAAU,GAAV,EAAc,SAAd,EAAwB,KAAxB;AAEH,KAZW,EAYV,EAZU,CAAZ;AAaH","file":"index-compiled.js","sourcesContent":["//获取元素\r\nlet box = document.getElementById(\"box\");\r\nlet ulS = document.getElementsByTagName(\"ul\");\r\nlet imgS = document.getElementsByTagName(\"img\");\r\nlet bodyH = null;//先将body的高度设置为null，后面需要用\r\nulS = [...ulS];//将uls转数组，以调用sort方法\r\n//绑定数据\r\nfunction bind(n){\r\n    for(let i = 0;i<n;i++){\r\n        //遍历要添加的li个数\r\n        //给最小高度的ul加上li标签\r\n        ulS[0].innerHTML += `\r\n        <li style=\"height:${utils.getRandom(270, 350)}px\">\r\n            <img src = \"../img/loading.gif\" photo=\"img/${utils.getRandom(1, 10)}.png\" alt=\"\">\r\n            <a href=\"javascript:void(0)\">点击查看详情</a>\r\n        </li>\r\n        `;\r\n        ulS.sort((a,b)=>{\r\n            return utils.css(a,'height')-utils.css(b,'height');\r\n        });//从小到大排序\r\n    }\r\n    bodyH = ulS[0].offsetHeight;//将最小的那项高度赋值给bodyH\r\n}\r\nfn();\r\n//滚动条滚动的时候让图片加载\r\nwindow.onscroll = fn;\r\nfunction fn(){\r\n    //循环判断是否加载下一屏\r\n    //获取滚动条卷去的高度\r\n    let winT = utils.win('scrollTop');\r\n    //获取可视窗口的高度\r\n    let winH = utils.win('clientHeight');\r\n    //如果可视窗口的高度+滚动条卷去的高度之和大于bodyH的值，则加载\r\n    if(winH+winT>bodyH){\r\n        bind(20);\r\n    }\r\n    //循环遍历所有的图片\r\n    for(let i = 0;i<imgS.length;i++){\r\n        lazyImg(imgS[i]);\r\n    }\r\n}\r\n//封装图片是否懒加载的问题\r\nfunction lazyImg(Ele){\r\n    //获取滚动条卷去的高度\r\n    let winT = utils.win('scrollTop');\r\n    //获取可视窗口的高度\r\n    let winH = utils.win('clientHeight');\r\n    //获取图片距离浏览器顶部的距离\r\n    let imgT = utils.offset(Ele).top;\r\n    //获取图片的高度\r\n    let imgH = Ele.offsetHeight;\r\n    //如果winT+winH>imgT+imgH/2,则加载\r\n    if(winH+winT>imgT){\r\n        if(Ele.flg){\r\n            return;\r\n        }\r\n        let newImg = new Image();\r\n        let photo = Ele.getAttribute(\"photo\");\r\n        newImg.src = photo;\r\n        newImg.onload = function () {\r\n            Ele.src = this.src;\r\n            Ele.flg = true;//给当前元素绑定flg属性\r\n            newImg = null;\r\n            fadeIn(Ele);\r\n        }\r\n\r\n    }\r\n}\r\n//封装fadeIn方法\r\nfunction fadeIn(Ele){\r\n    //设置初始值\r\n    utils.css(Ele,'opacity',0);\r\n    //获取图片的高度\r\n    let imgH = Ele.offsetHeight;\r\n    //获取滚动条卷去的高度\r\n    let winT = utils.win('scrollTop');\r\n    //获取可视窗口的高度\r\n    let winH = utils.win('clientHeight');\r\n    //获取图片距离浏览器顶部的距离\r\n    let imgT = utils.offset(Ele).top;\r\n    //设置定时器\r\n    Ele.timer = setInterval(function () {\r\n        //获取当前的透明度\r\n        let curOp = utils.css(Ele,'opacity');\r\n        curOp=parseFloat(curOp)+0.2;\r\n        if(winH+winT>imgH+imgT){\r\n            //如果可视窗口的高度+滚动条卷去的高度之和大于图片的高度和图片距离浏览器顶部的距离之和，设置透明度最大，并清除定时器\r\n            clearInterval(Ele.timer);\r\n            utils.css(Ele,'opacity',1);\r\n            return;\r\n        }\r\n        utils.css(Ele,'opacity',curOp);\r\n\r\n    },17);\r\n}"]}